spring:
  datasource:
    url: jdbc:mysql://${MYSQL_HOST:127.0.0.1}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:ecommerce}?useSSL=false&useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: ${MYSQL_USERNAME:admin}
    password: ${MYSQL_PASSWORD:password}
    jpa:
      hibernate:
        ddl-auto: update
      show-sql: true
      properties:
        hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          lob:
          non_contextual_creation: true
  data:
    rest:
      detection-strategy: ANNOTATED
app-config:
  allowed-origins: https://localhost:4200, http://localhost:80
okta:
  oauth2:
    client-id: paste your okta client here
    issuer: paste your okta dev url here and add /oauth2/default
  client:
    connectionTimeout: 30 # seconds
    orgUrl: paste your okta dev url # i.e. https://dev-123456.okta.com
    token: paste your okta token
    requestTimeout: 0 # seconds
    rateLimit:
      maxRetries: 4
## HTTPS CONFIGURATION ##
server:
  port: 8081
  ssl:
    enabled: true
    key-alias: sleepypoem
    key-store: classpath:sleepypoem-keystore.p12
    key-store-password: secret
    key-store-type: PKCS12
## Image Server Configuration ##
cloudinary:
  api-key: paste your cloudinary api key
  api:secret: paste your cloudinary api secret
  cloud-name: paste your cloudinary cloud name
  cloudinary-url: cloudinary://${cloudinary.api-key}:${cloudinary.api-secret}@${cloudinary.cloud-name}